"use strict";var e=require("ora"),r=require("axios"),s=require("fs/promises"),t=require("path"),i=require("svg2png"),a=require("sharp"),n=require("fs");function c(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=c(e),u=c(r),p=c(i),d=c(a);class f extends Error{failMessage=void 0;originErrorMessage;constructor(e,r){super(),this.failMessage=e,this.originErrorMessage=r}}let m=o.default(),l=o.default();const w="ic_launcher.png",g="ic_launcher_round.png",h=[{dirname:"mipmap-hdpi",size:72},{dirname:"mipmap-mdpi",size:48},{dirname:"mipmap-xhdpi",size:96},{dirname:"mipmap-xxhdpi",size:144},{dirname:"mipmap-xxxhdpi",size:192}],y={code:1e4,message:"--input参数未输入，请检查--input输入"},v={code:10001,message:"--input配置的远程地址下载失败，请检查路径是否正确与网络环境"},x={code:10002,message:"--input配置的本地地址获取，请检查路径是否正确"},z={code:10003,message:"生成圆角icon资源失败，请检查图标或联系作者"},B={code:10004,message:"生成icon资源失败，请检查文件是否含有相同文件"};async function S(e){await async function(e){try{const r=await u.default({method:"get",url:e,responseType:"arraybuffer"}),s=Buffer.from(r.data);q.updateSourceBuffer(s)}catch(e){throw new f(v,e.message)}}(e)}const q={sourceBuffer:void 0,updateSourceBuffer(e){this.sourceBuffer=e}};async function M(){switch(q.pathType){case"remote":return void await S(q["--input"]);case"relative":return void await async function(e){try{const r=await s.readFile(t.resolve(process.cwd(),e));q.updateSourceBuffer(r)}catch(e){throw new f(x,e.message)}}(q["--input"]);case"absolute":return void await async function(e){try{const r=await s.readFile(e);q.updateSourceBuffer(r)}catch(e){throw new f(x,e.message)}}(q["--input"]);default:return void console.log("inputSourceType异常")}}async function $(){const e=process.argv.slice(2),r={};e.forEach((e=>{const[s,t]=e.split("=");r[s]=t})),await async function(e){if(!e["--input"])throw new f(y,"check --input");e["--input"]&&(q["--input"]=e["--input"],q.pathType=function(e){return/^https?:\/\//.test(e)?"remote":e.startsWith("/")?"absolute":"relative"}(e["--input"]),await M())}(r)}function b(e,r,s){return new Promise((t=>{const i=e/2,a=Buffer.from(`<svg><circle cx="${i}" cy="${i}" r="${i}" /></svg>`);d.default(r).resize(e,e).composite([{input:a,blend:"dest-in"}]).toFile(s,((e,r)=>{if(t(!0),e)throw new f(z,e.message)}))}))}async function E(){try{m.info("Icon Generating In Progress......"),await $(),await async function(){try{const e=q.sourceBuffer;for(const r of h){const i=await p.default(e,{width:r.size,height:r.size}),a=t.resolve(process.cwd(),r.dirname);n.existsSync(a)||await s.mkdir(a),await s.writeFile(t.resolve(process.cwd(),r.dirname,w),i),await b(r.size,t.resolve(process.cwd(),r.dirname,w),t.resolve(process.cwd(),r.dirname,g)),l.succeed(`✅ Generate Success In ${r.dirname}`)}}catch(e){throw new f(B,e.message)}}(),m.stop(),m.succeed("Icon Generating Success")}catch(e){!function(e){const r=o.default();r.fail(`error: ${e.failMessage?.message}, code: ${e.failMessage?.code}, message: ${e?.originErrorMessage}`),r.clear()}(e)}}module.exports=()=>{E()};
